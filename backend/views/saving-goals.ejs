<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Saving Goals - FinTrack</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#3B82F6',
                        secondary: '#1E40AF',
                        accent: '#10B981',
                        success: '#10B981',
                        warning: '#F59E0B',
                        danger: '#EF4444',
                    }
                }
            }
        }
    </script>
    <style>
        .card-hover {
            transition: all 0.3s ease;
        }
        .card-hover:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        .modal-backdrop {
            backdrop-filter: blur(4px);
        }
        .progress-bar {
            transition: width 0.5s ease-in-out;
        }
    </style>
</head>

<body class="bg-gradient-to-b from-gray-900 to-gray-500 min-h-screen">
    <!-- Navigation Bar -->
    <nav class="bg-gradient-to-b from-black to-transparent sticky top-0 z-30">
        <div class="max-w-7xl mx-auto px-4">
            <div class="flex justify-between items-center py-4">
                <!-- Logo -->
                <div class="flex items-center">
                    <div class="inline-flex items-center justify-center w-10 h-10 bg-primary rounded-full mr-3">
                        <i class="fas fa-wallet text-white"></i>
                    </div>
                    <h1 class="text-xl font-bold text-gray-400">FinTrack</h1>
                </div>

                <!-- Navigation Links -->
                <div class="flex items-center space-x-2">
                    <a href="/dashboard" class="text-gray-300 hover:text-primary transition duration-200 px-4 py-2 bg-black bg-opacity-40 backdrop-blur-md rounded-lg">
                        <i class="fas fa-home mr-1"></i>Dashboard
                    </a>
                    <a href="/transactions" class="text-gray-300 hover:text-primary transition duration-200 px-4 py-2 bg-black bg-opacity-40 backdrop-blur-md rounded-lg">
                        <i class="fas fa-exchange-alt mr-1"></i>Transactions
                    </a>
                    <a href="/budgets" class="text-gray-300 hover:text-primary transition duration-200 px-4 py-2 bg-black bg-opacity-40 backdrop-blur-md rounded-lg">
                        <i class="fas fa-chart-pie mr-1"></i>Budgets
                    </a>
                    <a href="/categories" class="text-gray-300 hover:text-primary transition duration-200 px-4 py-2 bg-black bg-opacity-40 backdrop-blur-md rounded-lg">
                        <i class="fas fa-tags mr-1"></i>Categories
                    </a>
                    <a href="/saving-goals" class="bg-primary text-white px-4 py-2 rounded-lg hover:bg-secondary transition duration-200">
                        <i class="fas fa-piggy-bank mr-1"></i>Saving Goals
                    </a>
                    <a href="/profile" class="text-gray-300 hover:text-primary transition duration-200 px-4 py-2 bg-black bg-opacity-40 backdrop-blur-md rounded-lg">
                        <i class="fas fa-user mr-1"></i>Profile
                    </a>
                    <a href="/auth/logout" class="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition duration-200">
                        <i class="fas fa-sign-out-alt mr-1"></i>Logout
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <div class="container mx-auto px-4 py-8">
        <!-- Success/Error Messages -->
        <% if (typeof success !== 'undefined' && success) { %>
        <div class="max-w-6xl mx-auto mb-6">
            <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg">
                <div class="flex items-center">
                    <i class="fas fa-check-circle mr-2"></i>
                    <%= success %>
                </div>
            </div>
        </div>
        <% } %>

        <% if (typeof error !== 'undefined' && error) { %>
        <div class="max-w-6xl mx-auto mb-6">
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg">
                <div class="flex items-center">
                    <i class="fas fa-exclamation-circle mr-2"></i>
                    <%= error %>
                </div>
            </div>
        </div>
        <% } %>

        <!-- Header Section -->
        <div class="max-w-6xl mx-auto mb-8">
            <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
                <div>
                    <h1 class="text-3xl font-bold text-white mb-2">Saving Goals</h1>
                    <p class="text-gray-300">Track your financial goals and savings progress</p>
                </div>
                <button onclick="openGoalModal()" class="bg-primary text-white px-6 py-3 rounded-lg font-semibold hover:bg-secondary transition duration-200 flex items-center">
                    <i class="fas fa-plus mr-2"></i>Create New Goal
                </button>
            </div>
        </div>

        <!-- Saving Goals Grid -->
        <div class="max-w-6xl mx-auto">
            <% if (savingGoals && savingGoals.length > 0) { %>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    <% savingGoals.forEach(goal => { %>
                        <div class="bg-gray-200 rounded-xl shadow-lg p-6 card-hover">
                            <div class="flex items-start justify-between mb-4">
                                <div class="flex-1">
                                    <div class="flex items-center justify-between mb-2">
                                        <h3 class="text-lg font-semibold text-gray-800"><%= goal.name %></h3>
                                        <span class="px-2 py-1 text-xs font-semibold rounded-full <%= goal.status === 'Completed' ? 'bg-green-100 text-green-800' : goal.status === 'Paused' ? 'bg-yellow-100 text-yellow-800' : 'bg-blue-100 text-blue-800' %>">
                                            <%= goal.status %>
                                        </span>
                                    </div>
                                    
                                    <!-- Progress Bar -->
                                    <div class="mb-4">
                                        <div class="flex justify-between text-sm text-gray-600 mb-1">
                                            <span>$<%= parseFloat(goal.currentAmount).toFixed(2) %></span>
                                            <span>$<%= parseFloat(goal.targetAmount).toFixed(2) %></span>
                                        </div>
                                        <div class="w-full bg-gray-300 rounded-full h-2">
                                            <% const progressWidth = Math.min((goal.currentAmount / goal.targetAmount) * 100, 100); %>
                                            <div class="progress-bar bg-primary h-2 rounded-full" data-width="<%= progressWidth %>%"></div>
                                        </div>
                                        <div class="text-xs text-gray-500 mt-1">
                                            <%= Math.round((goal.currentAmount / goal.targetAmount) * 100) %>% complete
                                        </div>
                                    </div>

                                    <% if (goal.deadline) { %>
                                        <p class="text-xs text-gray-500 mb-2">
                                            <i class="fas fa-calendar mr-1"></i>
                                            Target: <%= new Date(goal.deadline).toLocaleDateString() %>
                                        </p>
                                    <% } %>
                                    
                                    <p class="text-xs text-gray-500">
                                        Created: <%= new Date(goal.createdAt).toLocaleDateString() %>
                                    </p>
                                </div>
                            </div>
                            <div class="flex space-x-2">
                                <button data-action="add-money" data-goal-id="<%= goal.id %>" data-current-amount="<%= goal.currentAmount %>" data-target-amount="<%= goal.targetAmount %>" data-goal-name="<%- goal.name.replace(/'/g, '\\&#39;') %>" 
                                        class="flex-1 bg-accent text-white py-2 px-3 rounded-lg text-sm font-semibold hover:bg-green-700 transition duration-200 flex items-center justify-center">
                                    <i class="fas fa-plus mr-1"></i>Add Money
                                </button>
                                <button data-action="edit" data-goal-id="<%= goal.id %>" data-goal-name="<%- goal.name.replace(/'/g, '\\&#39;') %>" data-goal-target="<%= goal.targetAmount %>" data-goal-deadline="<%= goal.deadline || '' %>" data-goal-status="<%= goal.status %>" 
                                        class="bg-blue-600 text-white py-2 px-3 rounded-lg text-sm font-semibold hover:bg-blue-700 transition duration-200">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button data-action="delete" data-goal-id="<%= goal.id %>" 
                                        class="bg-red-600 text-white py-2 px-3 rounded-lg text-sm font-semibold hover:bg-red-700 transition duration-200">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    <% }); %>
                </div>
            <% } else { %>
                <div class="text-center py-12">
                    <div class="bg-gray-200 rounded-xl p-8">
                        <i class="fas fa-piggy-bank text-6xl text-gray-400 mb-4"></i>
                        <h3 class="text-xl font-semibold text-gray-600 mb-2">No Saving Goals Yet</h3>
                        <p class="text-gray-500 mb-6">Create your first saving goal to start tracking your financial progress</p>
                        <button onclick="openGoalModal()" class="bg-primary text-white px-6 py-3 rounded-lg font-semibold hover:bg-secondary transition duration-200">
                            <i class="fas fa-plus mr-2"></i>Create Goal
                        </button>
                    </div>
                </div>
            <% } %>
        </div>
    </div>

    <!-- Goal Modal -->
    <div id="goalModal" class="fixed inset-0 bg-black bg-opacity-50 modal-backdrop hidden items-center justify-center z-50 p-4">
        <div class="bg-white rounded-lg max-w-md w-full max-h-[90vh] overflow-y-auto">
            <div class="p-6">
                <div class="flex items-center justify-between mb-6">
                    <h3 id="modalTitle" class="text-2xl font-semibold text-gray-800">Create New Goal</h3>
                    <button onclick="closeGoalModal()" class="text-gray-400 hover:text-gray-600 transition duration-200">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>

                <form id="goalForm" method="POST">
                    <div class="mb-6">
                        <label for="goalName" class="block text-sm font-medium text-gray-700 mb-2">
                            Goal Name *
                        </label>
                        <input type="text" id="goalName" name="name" required
                               class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent transition duration-200"
                               placeholder="Enter goal name">
                    </div>

                    <div class="mb-6">
                        <label for="targetAmount" class="block text-sm font-medium text-gray-700 mb-2">
                            Target Amount *
                        </label>
                        <div class="relative">
                            <span class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500">$</span>
                            <input type="number" id="targetAmount" name="targetAmount" step="0.01" min="0.01" required
                                   class="w-full pl-8 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent transition duration-200"
                                   placeholder="0.00">
                        </div>
                    </div>

                    <div class="mb-6">
                        <label for="deadline" class="block text-sm font-medium text-gray-700 mb-2">
                            Deadline (Optional)
                        </label>
                        <input type="date" id="deadline" name="deadline"
                               class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent transition duration-200">
                    </div>

                    <div class="flex space-x-4">
                        <button type="button" onclick="closeGoalModal()"
                                class="flex-1 bg-gray-300 text-gray-700 py-3 rounded-lg font-semibold hover:bg-gray-400 transition duration-200">
                            Cancel
                        </button>
                        <button type="submit" id="submitButton"
                                class="flex-1 bg-primary text-white py-3 rounded-lg font-semibold hover:bg-secondary transition duration-200">
                            <i class="fas fa-plus mr-2"></i>Create Goal
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Add Money Modal -->
    <div id="addMoneyModal" class="fixed inset-0 bg-black bg-opacity-50 modal-backdrop hidden items-center justify-center z-50 p-4">
        <div class="bg-white rounded-lg max-w-md w-full">
            <div class="p-6">
                <div class="flex items-center justify-between mb-6">
                    <h3 class="text-xl font-semibold text-gray-800">Add Money to Goal</h3>
                    <button onclick="closeAddMoneyModal()" class="text-gray-400 hover:text-gray-600 transition duration-200">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
                <form id="addMoneyForm" method="POST">
                    <div class="mb-4">
                        <div class="bg-blue-50 border border-blue-200 rounded-lg p-3 mb-4">
                            <div class="flex items-center">
                                <i class="fas fa-info-circle text-blue-600 mr-2"></i>
                                <div class="text-sm text-blue-800">
                                    <p class="font-medium">Goal Progress</p>
                                    <p id="goalProgress">Current: $0.00 / Target: $0.00</p>
                                    <p id="maxAmount" class="text-xs mt-1">Maximum you can add: $0.00</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-6">
                        <label for="amount" class="block text-sm font-medium text-gray-700 mb-2">
                            Amount to Add *
                        </label>
                        <div class="relative">
                            <span class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500">$</span>
                            <input type="number" id="amount" name="amount" step="0.01" min="0.01" required
                                   class="w-full pl-8 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent transition duration-200"
                                   placeholder="0.00">
                        </div>
                        <div id="amountError" class="text-red-600 text-sm mt-1 hidden"></div>
                    </div>

                    <div class="flex space-x-4">
                        <button type="button" onclick="closeAddMoneyModal()"
                                class="flex-1 bg-gray-300 text-gray-700 py-3 rounded-lg font-semibold hover:bg-gray-400 transition duration-200">
                            Cancel
                        </button>
                        <button type="submit" id="addMoneySubmit"
                                class="flex-1 bg-accent text-white py-3 rounded-lg font-semibold hover:bg-green-700 transition duration-200">
                            <i class="fas fa-plus mr-2"></i>Add Money
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="deleteModal" class="fixed inset-0 bg-black bg-opacity-50 modal-backdrop hidden items-center justify-center z-50 p-4">
        <div class="bg-white rounded-lg max-w-md w-full">
            <div class="p-6">
                <div class="flex items-center justify-between mb-6">
                    <h3 class="text-xl font-semibold text-gray-800">Delete Saving Goal</h3>
                    <button onclick="closeDeleteModal()" class="text-gray-400 hover:text-gray-600 transition duration-200">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>

                <div class="mb-6">
                    <div class="flex items-center mb-4">
                        <div class="bg-red-100 p-3 rounded-full mr-4">
                            <i class="fas fa-exclamation-triangle text-red-600 text-xl"></i>
                        </div>
                        <div>
                            <p class="text-gray-800 font-medium">Are you sure you want to delete this saving goal?</p>
                            <p class="text-sm text-gray-600 mt-1">This action cannot be undone.</p>
                        </div>
                    </div>
                </div>

                <div class="flex space-x-4">
                    <button onclick="closeDeleteModal()"
                            class="flex-1 bg-gray-300 text-gray-700 py-3 rounded-lg font-semibold hover:bg-gray-400 transition duration-200">
                        Cancel
                    </button>
                    <button onclick="confirmDelete()" id="deleteButton"
                            class="flex-1 bg-red-600 text-white py-3 rounded-lg font-semibold hover:bg-red-700 transition duration-200">
                        <i class="fas fa-trash mr-2"></i>Delete
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let editingGoalId = null;
        let deletingGoalId = null;
        let addingMoneyGoalId = null;

        function openGoalModal(goalId = null, name = '', targetAmount = '', deadline = '', status = '') {
            const modal = document.getElementById('goalModal');
            const form = document.getElementById('goalForm');
            const title = document.getElementById('modalTitle');
            const submitButton = document.getElementById('submitButton');
            const nameInput = document.getElementById('goalName');
            const targetInput = document.getElementById('targetAmount');
            const deadlineInput = document.getElementById('deadline');

            if (goalId) {
                editingGoalId = goalId;
                title.textContent = 'Edit Goal';
                submitButton.innerHTML = '<i class="fas fa-save mr-2"></i>Update Goal';
                form.action = `/saving-goals/${goalId}`;
                form.method = 'POST';
                
                if (!form.querySelector('input[name="_method"]')) {
                    const methodInput = document.createElement('input');
                    methodInput.type = 'hidden';
                    methodInput.name = '_method';
                    methodInput.value = 'PUT';
                    form.appendChild(methodInput);
                }
                
                nameInput.value = name;
                targetInput.value = targetAmount;
                deadlineInput.value = deadline;
            } else {
                editingGoalId = null;
                title.textContent = 'Create New Goal';
                submitButton.innerHTML = '<i class="fas fa-plus mr-2"></i>Create Goal';
                form.action = '/saving-goals';
                form.method = 'POST';
                
                const methodInput = form.querySelector('input[name="_method"]');
                if (methodInput) {
                    methodInput.remove();
                }
                
                nameInput.value = '';
                targetInput.value = '';
                deadlineInput.value = '';
            }

            modal.classList.remove('hidden');
            modal.classList.add('flex');
            nameInput.focus();
        }

        function closeGoalModal() {
            const modal = document.getElementById('goalModal');
            modal.classList.add('hidden');
            modal.classList.remove('flex');
            editingGoalId = null;
        }

        function editGoal(id, name, targetAmount, deadline, status) {
            openGoalModal(id, name, targetAmount, deadline, status);
        }

        function addMoneyToGoal(id, currentAmount, targetAmount, goalName) {
            addingMoneyGoalId = id;
            const modal = document.getElementById('addMoneyModal');
            const form = document.getElementById('addMoneyForm');
            
            form.action = `/saving-goals/${id}/add-money`;
            form.method = 'POST';
            
            const amountInput = document.getElementById('amount');
            const goalProgress = document.getElementById('goalProgress');
            const maxAmount = document.getElementById('maxAmount');
            const amountError = document.getElementById('amountError');
            
            goalProgress.textContent = `Current: $${parseFloat(currentAmount).toFixed(2)} / Target: $${parseFloat(targetAmount).toFixed(2)}`;
            const remainingAmount = parseFloat(targetAmount) - parseFloat(currentAmount);
            maxAmount.textContent = `Maximum you can add: $${remainingAmount.toFixed(2)}`;
            
            amountInput.value = '';
            amountInput.max = remainingAmount;
            amountError.textContent = '';
            amountError.classList.add('hidden');
            
            // Add real-time validation
            amountInput.addEventListener('input', function() {
                const inputAmount = parseFloat(this.value);
                const errorDiv = document.getElementById('amountError');
                const submitButton = document.getElementById('addMoneySubmit');
                
                if (inputAmount > remainingAmount) {
                    errorDiv.textContent = `Cannot add $${inputAmount.toFixed(2)}. Maximum allowed is $${remainingAmount.toFixed(2)}.`;
                    errorDiv.classList.remove('hidden');
                    this.classList.add('border-red-500');
                    this.classList.remove('border-gray-300');
                    submitButton.disabled = true;
                    submitButton.classList.add('opacity-50', 'cursor-not-allowed');
                } else if (inputAmount <= 0) {
                    errorDiv.textContent = 'Amount must be greater than 0.';
                    errorDiv.classList.remove('hidden');
                    this.classList.add('border-red-500');
                    this.classList.remove('border-gray-300');
                    submitButton.disabled = true;
                    submitButton.classList.add('opacity-50', 'cursor-not-allowed');
                } else {
                    errorDiv.classList.add('hidden');
                    this.classList.remove('border-red-500');
                    this.classList.add('border-gray-300');
                    submitButton.disabled = false;
                    submitButton.classList.remove('opacity-50', 'cursor-not-allowed');
                }
            });
            
            modal.classList.remove('hidden');
            modal.classList.add('flex');
            amountInput.focus();
        }

        function closeAddMoneyModal() {
            const modal = document.getElementById('addMoneyModal');
            modal.classList.add('hidden');
            modal.classList.remove('flex');
            addingMoneyGoalId = null;
        }

        function deleteGoal(id) {
            deletingGoalId = id;
            const modal = document.getElementById('deleteModal');
            modal.classList.remove('hidden');
            modal.classList.add('flex');
        }

        function closeDeleteModal() {
            const modal = document.getElementById('deleteModal');
            modal.classList.add('hidden');
            modal.classList.remove('flex');
            deletingGoalId = null;
        }

        function confirmDelete() {
            if (deletingGoalId) {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = `/saving-goals/${deletingGoalId}`;
                
                const methodInput = document.createElement('input');
                methodInput.type = 'hidden';
                methodInput.name = '_method';
                methodInput.value = 'DELETE';
                form.appendChild(methodInput);
                
                document.body.appendChild(form);
                form.submit();
            }
        }

        document.getElementById('goalModal').addEventListener('click', function (e) {
            if (e.target === this) {
                closeGoalModal();
            }
        });

        document.getElementById('addMoneyModal').addEventListener('click', function (e) {
            if (e.target === this) {
                closeAddMoneyModal();
            }
        });

        document.getElementById('deleteModal').addEventListener('click', function (e) {
            if (e.target === this) {
                closeDeleteModal();
            }
         });
         document.addEventListener('DOMContentLoaded', function() {
             const progressBars = document.querySelectorAll('.progress-bar[data-width]');
             progressBars.forEach(bar => {
                 const width = bar.getAttribute('data-width');
                 bar.style.width = width;
             });

             document.querySelectorAll('[data-action]').forEach(button => {
                 button.addEventListener('click', function() {
                     const action = this.getAttribute('data-action');
                     const goalId = this.getAttribute('data-goal-id');
                     
                     if (action === 'add-money') {
                         const currentAmount = this.getAttribute('data-current-amount');
                         const targetAmount = this.getAttribute('data-target-amount');
                         const goalName = this.getAttribute('data-goal-name');
                         addMoneyToGoal(goalId, currentAmount, targetAmount, goalName);
                     } else if (action === 'edit') {
                         const name = this.getAttribute('data-goal-name');
                         const target = this.getAttribute('data-goal-target');
                         const deadline = this.getAttribute('data-goal-deadline');
                         const status = this.getAttribute('data-goal-status');
                         editGoal(goalId, name, target, deadline, status);
                     } else if (action === 'delete') {
                         deleteGoal(goalId);
                     } else if (action === 'create-goal') {
                         openGoalModal();
                     }
                 });
             });
         });
     </script>
 </body>
 </html>
